{"version":3,"file":"rx-hub.js","sources":["../src/util/invariant.js","../src/store.js","../src/middleware/log.js","../src/hub.js"],"sourcesContent":["let NODE_ENV = process.env.NODE_ENV;\n\nexport default function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    let error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      let args = [a, b, c, d, e, f];\n      let argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n","import Rx from 'rxjs';\nimport invariant from './util/invariant';\n\nexport default class Store {\n\n  // constructor\n  constructor(options={}) {\n    this._check(options);\n\n    this.name = options.name || 'storeName';\n    this._isDataHubStore = true;\n    this._subject = new Rx.Subject();\n    this._state = options.initialState || {};\n    this._mutations = options.mutations || {};\n    this._modules = options.modules || {};\n  }\n\n  _check(options) {\n    invariant(\n      typeof options === 'object',\n      `Store options must be object!`\n    );\n\n    let initialState = options.initialState || {};\n    invariant(\n      initialState && typeof initialState === 'object',\n      `Store initialState must be object!`\n    );\n\n    let mutations = options.mutations || {};\n    invariant(\n      mutations && typeof mutations === 'object',\n      `Store mutations must be object!`\n    )\n\n    let modules = options.modules || {};\n    invariant(\n      modules && typeof modules === 'object',\n      `Store modules must be object!`\n    );\n\n    Object.keys(modules).forEach(key => {\n      let module = modules[key];\n      invariant(\n        typeof module === 'object' && module._isDataHubStore,\n        `Store module must be a store instance!`\n      );\n    });\n  }\n\n  // subscribe\n  subscribe(observer) {\n    return this._subject.subscribe(observer);\n  }\n\n  // get store's state\n  getState() {\n    let state = this._state;\n\n    Object.keys(this._modules).forEach(moduleName => {\n      state[moduleName] = this._modules[moduleName].getState();\n    });\n\n    return state;\n  }\n\n  /**\n   * [commit description]\n   * store.commit('main.user.add', {username: ''})\n   */\n  commit(mutation, payload, parent='') {\n    let arr = mutation.split('.', 2);\n    let location = parent ? parent + '.' + arr[0] : arr[0];\n\n    // module\n    if (arr.length > 1) {\n      let moduleName = arr[0];\n      let module = this._modules[moduleName];\n\n      invariant(\n        module,\n        `module <${location}> is not defined!`\n      );\n\n      module.commit(arr[1], payload, location);\n\n      return;\n    }\n\n    // mutation\n    invariant(\n      this._mutations[mutation],\n      `mutation <${location}> is not defined!`\n    )\n\n    let mutationFunc = this._mutations[mutation].bind(this);\n    mutationFunc(payload, this._state, this);\n\n    // let observer know\n    this._subject.next(this.getState());\n  }\n\n  // store is also a observer\n  next({mutation, payload}) {\n    this.commit(mutation, payload);\n  }\n\n  error() {\n    //\n  }\n\n  complete() {\n    //\n  }\n}\n","import {Observable} from 'rxjs';\n\nexport default function logMiddleware({payload, pipeName, type}) {\n  let data = payload;\n\n  try {\n    let data = JSON.parse(JSON.stringify(payload));\n  } catch(e) {\n    //\n  }\n  console.log(`rx-hub log ~ ${type} pipe <${pipeName}>:`, data);\n\n  return Observable.of(payload);\n}\n","import Rx from 'rxjs';\nimport invariant from './util/invariant';\nimport logMiddleware from './middleware/log';\n\nexport default class Hub {\n  // constructor\n  constructor(options={}) {\n    this._pipes = {};\n    this._middlewares = {\n      before: [],\n      after: [],\n    };\n\n    // combinedMiddleware\n    this.combinedMiddleware = this.combinedMiddleware.bind(this);\n\n    this.addMiddleware('before', logMiddleware);\n    this.addMiddleware('after', logMiddleware);\n  }\n\n  // get pipe\n  pipe(name) {\n    return this._pipes[name];\n  }\n\n  // add pipe\n  addPipe(name, sourceFn) {\n    this._pipes[name] = (payload) => {\n      return Rx.Observable.of(payload)\n        .concatMap(this.combinedMiddleware('before', name))\n        .concatMap(sourceFn)\n        .concatMap(this.combinedMiddleware('after', name));\n    }\n  }\n\n  // add pipes\n  addPipes(context, pipeFns) {\n    Object.keys(pipeFns).forEach(key => {\n      let pipeFn = pipeFns[key];\n      let pipeName = context + '.' + key;\n      this.addPipe(pipeName, pipeFn);\n    });\n  }\n\n  // commine middlewares\n  combinedMiddleware(type, pipeName) {\n    return (payload) => {\n      let observable = Rx.Observable.of({\n        payload,\n        pipeName,\n        type,\n      });\n      this._middlewares[type].forEach(fn => {\n        observable = observable.concatMap(fn);\n      });\n      return observable;\n    }\n  }\n\n  // add middleware\n  addMiddleware(type, fn) {\n    this._middlewares[type].push(fn);\n  }\n}\n"],"names":["NODE_ENV","process","env","condition","format","a","b","c","d","e","f","undefined","Error","error","args","argIndex","replace","name","framesToPop","Store","options","_check","_isDataHubStore","_subject","Rx","Subject","_state","initialState","_mutations","mutations","_modules","modules","keys","forEach","module","key","observer","subscribe","state","moduleName","getState","mutation","payload","parent","arr","split","location","length","commit","mutationFunc","bind","next","logMiddleware","pipeName","type","data","JSON","parse","stringify","log","Observable","of","Hub","_pipes","_middlewares","combinedMiddleware","addMiddleware","sourceFn","concatMap","context","pipeFns","pipeFn","addPipe","observable","fn","push"],"mappings":"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"}