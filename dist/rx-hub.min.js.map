{"version":3,"file":"rx-hub.min.js","sources":["../src/util/invariant.js","../src/store.js","../src/hub.js","../src/tool/vue.js","../src/middleware/log.js","../src/tool/react.js"],"sourcesContent":["let NODE_ENV = process.env.NODE_ENV;\n\nexport default function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    let error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      let args = [a, b, c, d, e, f];\n      let argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n","import {Subject} from './rxjs';\nimport invariant from './util/invariant';\n\nexport default class Store {\n\n  // constructor\n  constructor(options={}) {\n    this._check(options);\n\n    this.name = options.name || 'rx-hub store';\n    this._isRxHubStore = true;\n    this._subject = new Subject();\n    this._state = options.initialState || {};\n    this._mutations = options.mutations || {};\n    this._modules = options.modules || {};\n  }\n\n  _check(options) {\n    invariant(\n      typeof options === 'object',\n      `rx-hub sotre ~ options is not an object!`\n    );\n\n    let initialState = options.initialState || {};\n    invariant(\n      initialState && typeof initialState === 'object',\n      `rx-hub store ~ options.initialState is not an object!`\n    );\n\n    let mutations = options.mutations || {};\n    invariant(\n      mutations && typeof mutations === 'object',\n      `rx-hub store ~ options.mutations is not an object!`\n    )\n\n    let modules = options.modules || {};\n    invariant(\n      modules && typeof modules === 'object',\n      `rx-hub store ~ options.modules is not an object!`\n    );\n\n    Object.keys(modules).forEach(key => {\n      let module = modules[key];\n      invariant(\n        typeof module === 'object' && module._isRxHubStore,\n        `rx-hub store ~ module must be a store instance!`\n      );\n    });\n  }\n\n  // subscribe\n  subscribe(...args) {\n    return this._subject.subscribe(...args);\n  }\n\n  // state\n  get state() {\n    return this.getState();\n  }\n\n  // get store's state\n  getState() {\n    let state = this._state;\n\n    Object.keys(this._modules).forEach(moduleName => {\n      state[moduleName] = this._modules[moduleName].getState();\n    });\n\n    return state;\n  }\n\n  /**\n   * [commit description]\n   * store.commit('main.user.add', {username: ''})\n   */\n  commit(mutation, payload, parent='') {\n    let arr = mutation.split('.', 2);\n    let location = parent ? parent + '.' + arr[0] : arr[0];\n\n    // module\n    if (arr.length > 1) {\n      let moduleName = arr[0];\n      let module = this._modules[moduleName];\n\n      invariant(\n        module,\n        `rx-hub store ~ module <${location}> is not defined!`\n      );\n\n      module.commit(arr[1], payload, location);\n\n      // let observer know\n      this._subject.next(this.getState());\n\n      return;\n    }\n\n    // mutation\n    invariant(\n      this._mutations[mutation],\n      `rx-hub store ~ mutation <${location}> is not defined!`\n    )\n\n    let mutationFunc = this._mutations[mutation].bind(this);\n    mutationFunc(payload, this._state, this);\n\n    // let observer know\n    this._subject.next(this.getState());\n  }\n\n  // store is also a observer\n  next({mutation, payload}) {\n    this.commit(mutation, payload);\n  }\n\n  error() {\n    //\n  }\n\n  complete() {\n    //\n  }\n}\n","import {Observable} from './rxjs';\nimport invariant from './util/invariant';\n\nexport default class Hub {\n  // constructor\n  constructor(options={}) {\n    let beforeMiddlewares = options.beforeMiddlewares || [];\n    let afterMiddlewares = options.afterMiddlewares || [];\n\n    this._pipes = {};\n    this._middlewares = {\n      before: beforeMiddlewares,\n      after: afterMiddlewares,\n    };\n\n    // combinedMiddleware\n    this.combinedMiddleware = this.combinedMiddleware.bind(this);\n  }\n\n  // get pipe\n  pipe(name) {\n    invariant(\n      typeof this._pipes[name] === 'function',\n      `rx-hub hub ~ pipe <${name}> is undefined or not function!`\n    );\n    return this._pipes[name];\n  }\n\n  // add pipe\n  addPipe(name, converter) {\n    this._pipes[name] = (payload) => {\n      return Observable.of(payload)\n        .concatMap(this.combinedMiddleware('before', name))\n        .concatMap(converter)\n        .concatMap(this.combinedMiddleware('after', name));\n    }\n  }\n\n  // add pipes\n  addPipes(context, converters) {\n    Object.keys(converters).forEach(key => {\n      let converter = converters[key];\n      let pipeName = context + '.' + key;\n      this.addPipe(pipeName, converter);\n    });\n  }\n\n  // commine middlewares\n  combinedMiddleware(type, pipeName) {\n    return (payload) => {\n      let observable = Observable.of(payload);\n      this._middlewares[type].forEach(fn => {\n        observable = observable.map(payload => {\n          return {\n            payload,\n            pipeName,\n            type,\n          };\n        }).concatMap(fn);\n      });\n      return observable;\n    }\n  }\n\n  // add middleware\n  addMiddleware(type, middleware) {\n    this._middlewares[type].push(middleware);\n  }\n}\n","const VuePlugin = {};\n\nVuePlugin.install = function(Vue, options) {\n\n  let storeOptionKey = options.storeOptionKey || 'store';\n  let storeKey = options.storeKey || '$store';\n  let hubOptionKey = options.hubOptionKey || 'hub';\n  let hubKey = options.hubKey || '$hub';\n  let stateKey = options.stateKey || 'state';\n  let subscriptionsKey = options.subscriptionsKey || '$subs';\n\n  // mixin\n  Vue.mixin({\n    data() {\n      const vm = this;\n      \n      // injection data with state\n      return {\n        [stateKey]: vm[storeKey] ? vm[storeKey].state : null,\n      }\n    },\n\n    beforeCreate() {\n      const vm = this;\n      const options = vm.$options;\n      const store = options[storeOptionKey];\n      const hub = options[hubOptionKey];\n\n      // store injection\n      if (store) {\n        vm[storeKey] = typeof store === 'function' ? store() : store;\n      } else if (options.parent && options.parent[storeKey]) {\n        vm[storeKey] = options.parent[storeKey];\n      }\n\n      // hub injection\n      if (hub) {\n        vm[hubKey] = typeof hub === 'function' ? hub() : hub;\n      } else if (options.parent && options.parent[hubKey]) {\n        vm[hubKey] = options.parent[hubKey];\n      }\n\n      // subscriptions\n      vm[subscriptionsKey] = {};\n    },\n\n    methods: {\n      $unsubscribe(key) {\n        const vm = this;\n        const subscriptions = vm[subscriptionsKey];\n\n        try {\n          // unsubscribe one\n          if (key) {\n            if (\n              subscriptions[key]\n              && typeof subscriptions[key].unsubscribe === 'function'\n            ) {\n              subscriptions[key].unsubscribe();\n            }\n            return;\n          }\n\n          // unsubscribe all\n          Object.keys(subscriptions).forEach(key => {\n            let subscription = subscriptions[key];\n            if (subscription && typeof subscription.unsubscribe === 'function') {\n              subscription.unsubscribe();\n            }\n          });\n        } catch(e) {\n          console.log(e);\n        }\n      }\n    },\n\n    beforeDestroy() {\n      this.$unsubscribe();\n    }\n  });\n}\n\nexport default VuePlugin;\n","import {Observable} from '../rxjs';;\n\nexport default function logMiddleware({payload, pipeName, type}) {\n  let data = payload;\n  let typeMsg = {\n    before: 'in',\n    after: 'out'\n  }[type];\n\n  try {\n    let data = JSON.parse(JSON.stringify(payload));\n  } catch(e) {\n    //\n  }\n\n  console.log(`rx-hub log ~ pipe ${typeMsg} <${pipeName}>:`, data);\n\n  return Observable.of(payload);\n}\n","export default function createRxHubComponent({\n  store,\n  hub,\n  storeKey = '$store',\n  hubKey = '$hub',\n  subscriptionsKey = '$subs',\n  unsubscribeKey = '$unsubscribe'\n}, React) {\n\n  class RxHubComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this[storeKey] = store;\n      this[hubKey] = hub;\n      this[subscriptionsKey] = {};\n\n      // unsubscribe\n      this[unsubscribeKey] = (key) => {\n        let subscriptions = this[subscriptionsKey];\n\n        try {\n          // remove one\n          if (key) {\n            if (\n              subscriptions[key]\n              && typeof subscriptions[key].unsubscribe === 'function'\n            ) {\n              subscriptions[key].unsubscribe();\n            }\n            return;\n          }\n\n          // remove all\n          Object.keys(subscriptions).forEach(key => {\n            let subscription = subscriptions[key];\n            if (typeof subscription.unsubscribe === 'function') {\n              subscription.unsubscribe();\n            }\n          });\n\n        } catch(e) {\n          console.error(e);\n        }\n      }\n    }\n\n    componentWillUnMount() {\n      this[unsubscribeKey]();\n    }\n  };\n\n  return RxHubComponent;\n}\n"],"names":["condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","Store","options","_check","_isRxHubStore","_subject","Subject","_state","initialState","_mutations","mutations","_modules","modules","keys","forEach","module","key","subscribe","state","this","moduleName","_this","getState","mutation","payload","parent","arr","split","location","length","commit","next","bind","Hub","beforeMiddlewares","afterMiddlewares","_pipes","_middlewares","combinedMiddleware","converter","Observable","of","concatMap","context","converters","pipeName","addPipe","type","observable","map","fn","middleware","push","VuePlugin","install","Vue","storeOptionKey","storeKey","hubOptionKey","hubKey","stateKey","subscriptionsKey","mixin","vm","$options","store","hub","subscriptions","unsubscribe","subscription","log","$unsubscribe","data","typeMsg","JSON","parse","stringify","React","unsubscribeKey","props","Component"],"mappings":"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"}