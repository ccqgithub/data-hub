{"version":3,"file":"rx-hub.min.js","sources":["../src/util/invariant.js","../src/store.js","../src/hub.js","../src/tool/vue.js","../src/middleware/log.js","../src/tool/react.js"],"sourcesContent":["let NODE_ENV = process.env.NODE_ENV;\n\nexport default function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    let error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      let args = [a, b, c, d, e, f];\n      let argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n","import {Subject} from './rxjs';\nimport invariant from './util/invariant';\n\nexport default class Store {\n\n  // constructor\n  constructor(options={}) {\n    this._check(options);\n\n    this.name = options.name || 'rx-hub store';\n    this._isRxHubStore = true;\n    this._subject = new Subject();\n    this._state = options.initialState || {};\n    this._mutations = options.mutations || {};\n    this._modules = options.modules || {};\n  }\n\n  _check(options) {\n    invariant(\n      typeof options === 'object',\n      `rx-hub sotre ~ options is not an object!`\n    );\n\n    let initialState = options.initialState || {};\n    invariant(\n      initialState && typeof initialState === 'object',\n      `rx-hub store ~ options.initialState is not an object!`\n    );\n\n    let mutations = options.mutations || {};\n    invariant(\n      mutations && typeof mutations === 'object',\n      `rx-hub store ~ options.mutations is not an object!`\n    )\n\n    let modules = options.modules || {};\n    invariant(\n      modules && typeof modules === 'object',\n      `rx-hub store ~ options.modules is not an object!`\n    );\n\n    Object.keys(modules).forEach(key => {\n      let module = modules[key];\n      invariant(\n        typeof module === 'object' && module._isRxHubStore,\n        `rx-hub store ~ module must be a store instance!`\n      );\n    });\n  }\n\n  // subscribe\n  subscribe(observer) {\n    return this._subject.subscribe(observer);\n  }\n\n  // state\n  get state() {\n    return this.getState();\n  }\n\n  // get store's state\n  getState() {\n    let state = this._state;\n\n    Object.keys(this._modules).forEach(moduleName => {\n      state[moduleName] = this._modules[moduleName].getState();\n    });\n\n    return state;\n  }\n\n  /**\n   * [commit description]\n   * store.commit('main.user.add', {username: ''})\n   */\n  commit(mutation, payload, parent='') {\n    let arr = mutation.split('.', 2);\n    let location = parent ? parent + '.' + arr[0] : arr[0];\n\n    // module\n    if (arr.length > 1) {\n      let moduleName = arr[0];\n      let module = this._modules[moduleName];\n\n      invariant(\n        module,\n        `rx-hub store ~ module <${location}> is not defined!`\n      );\n\n      module.commit(arr[1], payload, location);\n\n      // let observer know\n      this._subject.next(this.getState());\n\n      return;\n    }\n\n    // mutation\n    invariant(\n      this._mutations[mutation],\n      `rx-hub store ~ mutation <${location}> is not defined!`\n    )\n\n    let mutationFunc = this._mutations[mutation].bind(this);\n    mutationFunc(payload, this._state, this);\n\n    // let observer know\n    this._subject.next(this.getState());\n  }\n\n  // store is also a observer\n  next({mutation, payload}) {\n    this.commit(mutation, payload);\n  }\n\n  error() {\n    //\n  }\n\n  complete() {\n    //\n  }\n}\n","import {Observable} from './rxjs';\nimport invariant from './util/invariant';\n\nexport default class Hub {\n  // constructor\n  constructor(options={}) {\n    let beforeMiddlewares = options.beforeMiddlewares || [];\n    let afterMiddlewares = options.afterMiddlewares || [];\n\n    this._pipes = {};\n    this._middlewares = {\n      before: beforeMiddlewares,\n      after: afterMiddlewares,\n    };\n\n    // combinedMiddleware\n    this.combinedMiddleware = this.combinedMiddleware.bind(this);\n  }\n\n  // get pipe\n  pipe(name) {\n    invariant(\n      typeof this._pipes[name] === 'function',\n      `rx-hub hub ~ pipe <${name}> is undefined or not function!`\n    );\n    return this._pipes[name];\n  }\n\n  // add pipe\n  addPipe(name, converter) {\n    this._pipes[name] = (payload) => {\n      return Observable.of(payload)\n        .concatMap(this.combinedMiddleware('before', name))\n        .concatMap(converter)\n        .concatMap(this.combinedMiddleware('after', name));\n    }\n  }\n\n  // add pipes\n  addPipes(context, converters) {\n    Object.keys(converters).forEach(key => {\n      let converter = converters[key];\n      let pipeName = context + '.' + key;\n      this.addPipe(pipeName, converter);\n    });\n  }\n\n  // commine middlewares\n  combinedMiddleware(type, pipeName) {\n    return (payload) => {\n      let observable = Observable.of(payload);\n      this._middlewares[type].forEach(fn => {\n        observable = observable.map(payload => {\n          return {\n            payload,\n            pipeName,\n            type,\n          };\n        }).concatMap(fn);\n      });\n      return observable;\n    }\n  }\n\n  // add middleware\n  addMiddleware(type, middleware) {\n    this._middlewares[type].push(middleware);\n  }\n}\n","const VuePlugin = {};\n\nVuePlugin.install = function(Vue, options) {\n  let storeOptionKey = options.storeOptionKey || 'store';\n  let storeKey = options.storeKey || '$store';\n  let hubOptionKey = options.hubOptionKey || 'hub';\n  let hubKey = options.hubKey || '$hub';\n  let stateKey = options.stateKey || 'state';\n  let subscriptionsKey = options.subscriptionsKey || '$subs';\n\n  // mixin\n  Vue.mixin({\n    data() {\n      return {\n        [stateKey]: null\n      }\n    },\n\n    beforeCreate() {\n      const vm = this;\n      const options = vm.$options;\n      const store = options[storeOptionKey];\n      const hub = options[hubOptionKey];\n\n      // store injection\n      if (store) {\n        vm[storeKey] = typeof store === 'function' ? store() : store;\n        // state injection\n        vm[stateKey] = vm[storeKey].state;\n      } else if (options.parent && options.parent[storeKey]) {\n        vm[storeKey] = options.parent[storeKey];\n      }\n\n      // hub injection\n      if (hub) {\n        vm[hubKey] = typeof hub === 'function' ? hub() : hub;\n      } else if (options.parent && options.parent[hubKey]) {\n        vm[hubKey] = options.parent[hubKey];\n      }\n\n      // subscriptions\n      vm[subscriptionsKey] = {};\n    },\n\n    beforeDestroy() {\n      const vm = this;\n\n      try {\n        for (let subscription of vm[subscriptionsKey]) {\n          subscription.unsubscribe();\n        }\n      } catch(e) {\n        console.error(e);\n      }\n    }\n  });\n}\n\nexport default VuePlugin;\n","import {Observable} from '../rxjs';;\n\nexport default function logMiddleware({payload, pipeName, type}) {\n  let data = payload;\n  let typeMsg = {\n    before: 'in',\n    after: 'out'\n  }[type];\n\n  try {\n    let data = JSON.parse(JSON.stringify(payload));\n  } catch(e) {\n    //\n  }\n\n  console.log(`rx-hub log ~ pipe ${typeMsg} <${pipeName}>:`, data);\n\n  return Observable.of(payload);\n}\n","export default function connectReact({\n  store,\n  hub,\n  storeKey = 'store',\n  hubKey = 'hub'\n}, React) {\n\n  // connect function\n  return function(Compnent) {\n    // connected component\n    function ConnectComponent(props) {\n\n      if (!props[storeKey]) props[storeKey] = store;\n      if (!props[hubKey]) props[hubKey] = store;\n\n      return React.createElement(\n        Compnent,\n        [props],\n        [...props.children]\n      );\n    }\n\n    return ConnectComponent;\n  }\n}\n"],"names":["condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","Store","options","_check","_isRxHubStore","_subject","Subject","_state","initialState","_mutations","mutations","_modules","modules","keys","forEach","module","key","observer","this","subscribe","state","moduleName","_this","getState","mutation","payload","parent","arr","split","location","length","commit","next","bind","Hub","beforeMiddlewares","afterMiddlewares","_pipes","_middlewares","combinedMiddleware","converter","Observable","of","concatMap","context","converters","pipeName","addPipe","type","observable","map","fn","middleware","push","VuePlugin","install","Vue","storeOptionKey","storeKey","hubOptionKey","hubKey","stateKey","subscriptionsKey","mixin","vm","$options","store","hub","unsubscribe","data","typeMsg","JSON","parse","stringify","log","React","Compnent","props","createElement","children"],"mappings":"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"}