{"version":3,"file":"rx-hub.min.js","sources":["../src/util/invariant.js","../src/store.js","../src/hub.js","../src/middleware/log.js"],"sourcesContent":["let NODE_ENV = process.env.NODE_ENV;\n\nexport default function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    let error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      let args = [a, b, c, d, e, f];\n      let argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n","import Rx from 'rxjs/Rx';\nimport invariant from './util/invariant';\n\nexport default class Store {\n\n  // constructor\n  constructor(options={}) {\n    this._check(options);\n\n    this.name = options.name || 'rx-hub store';\n    this._isRxHubStore = true;\n    this._subject = new Rx.Subject();\n    this._state = options.initialState || {};\n    this._mutations = options.mutations || {};\n    this._modules = options.modules || {};\n  }\n\n  _check(options) {\n    invariant(\n      typeof options === 'object',\n      `rx-hub sotre ~ options is not an object!`\n    );\n\n    let initialState = options.initialState || {};\n    invariant(\n      initialState && typeof initialState === 'object',\n      `rx-hub store ~ options.initialState is not an object!`\n    );\n\n    let mutations = options.mutations || {};\n    invariant(\n      mutations && typeof mutations === 'object',\n      `rx-hub store ~ options.mutations is not an object!`\n    )\n\n    let modules = options.modules || {};\n    invariant(\n      modules && typeof modules === 'object',\n      `rx-hub store ~ options.modules is not an object!`\n    );\n\n    Object.keys(modules).forEach(key => {\n      let module = modules[key];\n      invariant(\n        typeof module === 'object' && module._isRxHubStore,\n        `rx-hub store ~ module must be a store instance!`\n      );\n    });\n  }\n\n  // subscribe\n  subscribe(observer) {\n    return this._subject.subscribe(observer);\n  }\n\n  // get store's state\n  getState() {\n    let state = this._state;\n\n    Object.keys(this._modules).forEach(moduleName => {\n      state[moduleName] = this._modules[moduleName].getState();\n    });\n\n    return state;\n  }\n\n  /**\n   * [commit description]\n   * store.commit('main.user.add', {username: ''})\n   */\n  commit(mutation, payload, parent='') {\n    let arr = mutation.split('.', 2);\n    let location = parent ? parent + '.' + arr[0] : arr[0];\n\n    // module\n    if (arr.length > 1) {\n      let moduleName = arr[0];\n      let module = this._modules[moduleName];\n\n      invariant(\n        module,\n        `rx-hub store ~ module <${location}> is not defined!`\n      );\n\n      module.commit(arr[1], payload, location);\n\n      // let observer know\n      this._subject.next(this.getState());\n\n      return;\n    }\n\n    // mutation\n    invariant(\n      this._mutations[mutation],\n      `rx-hub store ~ mutation <${location}> is not defined!`\n    )\n\n    let mutationFunc = this._mutations[mutation].bind(this);\n    mutationFunc(payload, this._state, this);\n\n    // let observer know\n    this._subject.next(this.getState());\n  }\n\n  // store is also a observer\n  next({mutation, payload}) {\n    this.commit(mutation, payload);\n  }\n\n  error() {\n    //\n  }\n\n  complete() {\n    //\n  }\n}\n","import Rx from 'rxjs/Rx';\nimport invariant from './util/invariant';\n\nexport default class Hub {\n  // constructor\n  constructor(options={}) {\n    let beforeMiddlewares = options.beforeMiddlewares || [];\n    let afterMiddlewares = options.afterMiddlewares || [];\n\n    this._pipes = {};\n    this._middlewares = {\n      before: beforeMiddlewares,\n      after: afterMiddlewares,\n    };\n\n    // combinedMiddleware\n    this.combinedMiddleware = this.combinedMiddleware.bind(this);\n  }\n\n  // get pipe\n  pipe(name) {\n    invariant(\n      typeof this._pipes[name] === 'function',\n      `rx-hub hub ~ pipe <${name}> is undefined or not function!`\n    );\n    return this._pipes[name];\n  }\n\n  // add pipe\n  addPipe(name, converter) {\n    this._pipes[name] = (payload) => {\n      return Rx.Observable.of(payload)\n        .concatMap(this.combinedMiddleware('before', name))\n        .concatMap(converter)\n        .concatMap(this.combinedMiddleware('after', name));\n    }\n  }\n\n  // add pipes\n  addPipes(context, converters) {\n    Object.keys(converters).forEach(key => {\n      let converter = converters[key];\n      let pipeName = context + '.' + key;\n      this.addPipe(pipeName, converter);\n    });\n  }\n\n  // commine middlewares\n  combinedMiddleware(type, pipeName) {\n    return (payload) => {\n      let observable = Rx.Observable.of(payload);\n      this._middlewares[type].forEach(fn => {\n        observable = observable.map(payload => {\n          return {\n            payload,\n            pipeName,\n            type,\n          };\n        }).concatMap(fn);\n      });\n      return observable;\n    }\n  }\n\n  // add middleware\n  addMiddleware(type, middleware) {\n    this._middlewares[type].push(middleware);\n  }\n}\n","import Rx from 'rxjs/Rx';\n\nexport default function logMiddleware({payload, pipeName, type}) {\n  let data = payload;\n  let typeMsg = {\n    before: 'in',\n    after: 'out'\n  }[type];\n\n  try {\n    let data = JSON.parse(JSON.stringify(payload));\n  } catch(e) {\n    //\n  }\n\n  console.log(`rx-hub log ~ pipe ${typeMsg} <${pipeName}>:`, data);\n\n  return Rx.Observable.of(payload);\n}\n"],"names":["condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","Store","options","_check","_isRxHubStore","_subject","Rx","Subject","_state","initialState","_mutations","mutations","_modules","modules","keys","forEach","module","key","observer","this","subscribe","state","moduleName","_this","getState","mutation","payload","parent","arr","split","location","length","commit","next","bind","Hub","beforeMiddlewares","afterMiddlewares","_pipes","_middlewares","combinedMiddleware","converter","Observable","of","concatMap","context","converters","pipeName","addPipe","type","observable","map","fn","middleware","push","data","typeMsg","JSON","parse","stringify","log"],"mappings":"6QAAA,MAEe,SAASA,EAAWC,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,OAOnDP,EAAW,KACVQ,iBACWC,IAAXR,IACM,IAAIS,MACV,qIAGG,KACDC,GAAQT,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACvBK,EAAW,KACP,IAAIF,MACVT,EAAOY,QAAQ,MAAO,kBAAoBF,EAAKC,SAE3CE,KAAO,8BAGTC,YAAc,EACdP,oiBCvBWQ,8BAGPC,2EACLC,OAAOD,QAEPH,KAAOG,EAAQH,MAAQ,oBACvBK,eAAgB,OAChBC,SAAW,IAAIC,EAAGC,aAClBC,OAASN,EAAQO,sBACjBC,WAAaR,EAAQS,mBACrBC,SAAWV,EAAQW,qDAGnBX,KAEgB,qBAAZA,gBAAAA,oDAILO,EAAeP,EAAQO,mBAEzBA,GAAwC,qBAAjBA,gBAAAA,iEAIrBE,EAAYT,EAAQS,gBAEtBA,GAAkC,qBAAdA,gBAAAA,8DAIlBE,EAAUX,EAAQW,cAEpBA,GAA8B,qBAAZA,gBAAAA,+DAIbC,KAAKD,GAASE,QAAQ,gBACvBC,EAASH,EAAQI,KAED,qBAAXD,gBAAAA,KAAuBA,EAAOZ,qGAOjCc,UACDC,KAAKd,SAASe,UAAUF,iDAK3BG,EAAQF,KAAKX,qBAEVM,KAAKK,KAAKP,UAAUG,QAAQ,cAC3BO,GAAcC,EAAKX,SAASU,GAAYE,aAGzCH,iCAOFI,EAAUC,OAASC,yDAAO,GAC3BC,EAAMH,EAASI,MAAM,IAAK,GAC1BC,EAAWH,EAASA,EAAS,IAAMC,EAAI,GAAKA,EAAI,MAGhDA,EAAIG,OAAS,EAAG,KACdT,EAAaM,EAAI,GACjBZ,EAASG,KAAKP,SAASU,YAGzBN,4BAC0Bc,yBAGrBE,OAAOJ,EAAI,GAAIF,EAASI,aAG1BzB,SAAS4B,KAAKd,KAAKK,cAOxBL,KAAKT,WAAWe,+BACYK,uBAGXX,KAAKT,WAAWe,GAAUS,KAAKf,MACrCO,EAASP,KAAKX,OAAQW,WAG9Bd,SAAS4B,KAAKd,KAAKK,gDAIpBC,IAAAA,SAAUC,IAAAA,aACTM,OAAOP,EAAUC,iFCxGLS,8BAEPjC,0EACNkC,EAAoBlC,EAAQkC,sBAC5BC,EAAmBnC,EAAQmC,0BAE1BC,eACAC,qBACKH,QACDC,QAIJG,mBAAqBrB,KAAKqB,mBAAmBN,KAAKf,6CAIpDpB,YAE4B,mBAAtBoB,KAAKmB,OAAOvC,yBACGA,qCAEjBoB,KAAKmB,OAAOvC,mCAIbA,EAAM0C,mBACPH,OAAOvC,GAAQ,SAAC2B,UACZpB,EAAGoC,WAAWC,GAAGjB,GACrBkB,UAAUrB,EAAKiB,mBAAmB,SAAUzC,IAC5C6C,UAAUH,GACVG,UAAUrB,EAAKiB,mBAAmB,QAASzC,sCAKzC8C,EAASC,qBACThC,KAAKgC,GAAY/B,QAAQ,gBAC1B0B,EAAYK,EAAW7B,GACvB8B,EAAWF,EAAU,IAAM5B,IAC1B+B,QAAQD,EAAUN,gDAKRQ,EAAMF,qBAChB,SAACrB,OACFwB,EAAa5C,EAAGoC,WAAWC,GAAGjB,YAC7Ba,aAAaU,GAAMlC,QAAQ,cACjBmC,EAAWC,IAAI,kDAMzBP,UAAUQ,KAERF,yCAKGD,EAAMI,QACbd,aAAaU,GAAMK,KAAKD,8CChElB,gBAAwB3B,IAAAA,QAASqB,IAAAA,SAC1CQ,EAAO7B,EACP8B,UACM,WACD,SAJ+CP,UAQ3CQ,KAAKC,MAAMD,KAAKE,UAAUjC,IACrC,MAAMnC,mBAIAqE,yBAAyBJ,OAAYT,OAAcQ,GAEpDjD,EAAGoC,WAAWC,GAAGjB"}