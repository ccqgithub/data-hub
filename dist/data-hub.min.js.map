{"version":3,"file":"data-hub.min.js","sources":["../src/rxjs.js","../src/util/invariant.js","../src/store.js","../src/hub.js","../src/tool/vue.js","../src/middleware/log.js","../src/tool/react.js"],"sourcesContent":["import invariant from './util/invariant';\n\nexport let Rx = {\n  _needInstall: true\n};\n\nexport function useRx(_Rx={}) {\n  Rx = _Rx;\n} \n\nexport function checkRx() {\n  invariant(\n    !Rx._needInstall && Rx.Observable && Rx.Subject,\n    `data-hub error ~ useRx({Observerble, Subject}) is required!`\n  );\n\n  invariant(\n    Rx.Observable.from,\n    `data-hub error ~ 'Rx.Observable.from' is required! Try import 'rxjs/add/observable/from'`\n  );\n\n  invariant(\n    Rx.Observable.of,\n    `data-hub error ~ 'Rx.Observable.of' is required! Try import 'rxjs/add/observable/of'`\n  );\n}","let NODE_ENV = process.env.NODE_ENV;\n\nexport default function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    let error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      let args = [a, b, c, d, e, f];\n      let argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n","import {Rx, checkRx} from './rxjs';\nimport invariant from './util/invariant';\n\nexport default class Store {\n\n  // constructor\n  constructor(options={}) {\n    checkRx();\n\n    this._check(options);\n\n    this.debug = !!options.debug;\n    this.name = options.name || 'data-hub store';\n    this._isRxHubStore = true;\n    this._subject = new Rx.Subject();\n    this._state = options.initialState || {};\n    this._mutations = options.mutations || {};\n    this._modules = options.modules || {};\n  }\n\n  _check(options) {\n    invariant(\n      typeof options === 'object',\n      `data-hub error ~ store: options is not an object!`\n    );\n\n    let initialState = options.initialState || {};\n    invariant(\n      initialState && typeof initialState === 'object',\n      `data-hub error ~ store: options.initialState is not an object!`\n    );\n\n    let mutations = options.mutations || {};\n    invariant(\n      mutations && typeof mutations === 'object',\n      `data-hub error ~ store: options.mutations is not an object!`\n    )\n\n    let modules = options.modules || {};\n    invariant(\n      modules && typeof modules === 'object',\n      `data-hub error ~ store: options.modules is not an object!`\n    );\n\n    Object.keys(modules).forEach(key => {\n      let module = modules[key];\n      invariant(\n        typeof module === 'object' && module._isRxHubStore,\n        `data-hub error ~ store: module must be a store instance!`\n      );\n    });\n  }\n\n  // subscribe\n  subscribe(...args) {\n    return this._subject.subscribe(...args);\n  }\n\n  // state\n  get state() {\n    return this.getState();\n  }\n\n  // get store's state\n  getState() {\n    let state = this._state;\n\n    Object.keys(this._modules).forEach(moduleName => {\n      state[moduleName] = this._modules[moduleName].getState();\n    });\n\n    return state;\n  }\n\n  /**\n   * clone a node in state, internal use: JSON.parse(JSON.stringify(node))\n   * let userList = store.copy('user.list');\n   */\n  copy(path) {\n    let arr = path ? path.split('.') : [];\n    let find = this.state;\n\n    while (typeof find === 'object' && arr.length) {\n      find = find[arr.shift()];\n    }\n\n    return JSON.parse(JSON.stringify(find));\n  }\n\n  /**\n   * [commit description]\n   * store.commit('main.user.add', {username: ''})\n   */\n  commit(mutation, payload, parent='') {\n    let arr = mutation.split('.', 2);\n    let location = parent ? parent + '.' + arr[0] : arr[0];\n\n    // log\n    if (this.debug && !parent) {\n      console.log(`data-hub log ~ store commit <${mutation}>`, payload);\n    }\n\n    // module\n    if (arr.length > 1) {\n      let moduleName = arr[0];\n      let module = this._modules[moduleName];\n\n      invariant(\n        module,\n        `data-hub error ~ store: module <${location}> is not defined!`\n      );\n\n      module.commit(arr[1], payload, location);\n\n      // let observer know\n      this._subject.next(this.getState());\n\n      return;\n    }\n\n    // mutation\n    invariant(\n      this._mutations[mutation],\n      `data-hub error ~ store: mutation <${location}> is not defined!`\n    )\n\n    let mutationFunc = this._mutations[mutation].bind(this);\n    mutationFunc(payload, this._state, this);\n\n    // let observer know\n    this._subject.next(this.getState());\n  }\n\n  // store is also a observer\n  next({mutation, payload}) {\n    this.commit(mutation, payload);\n  }\n\n  error() {\n    //\n  }\n\n  complete() {\n    //\n  }\n}\n","import {Rx, checkRx} from './rxjs';\nimport invariant from './util/invariant';\n\nexport default class Hub {\n  // constructor\n  constructor(options={}) {\n    // check rx install\n    checkRx();\n\n    let beforeMiddlewares = options.beforeMiddlewares || [];\n    let afterMiddlewares = options.afterMiddlewares || [];\n\n    // Rx Refrence\n    this.Rx = Rx;\n\n    // store pipes, middlewares\n    this._pipes = {};\n    this._middlewares = {\n      before: beforeMiddlewares,\n      after: afterMiddlewares,\n    };\n\n    // combinedMiddleware\n    this.combinedMiddleware = this.combinedMiddleware.bind(this);\n  }\n\n  // get pipe\n  pipe(name) {\n    invariant(\n      typeof this._pipes[name] === 'function',\n      `data-hub error ~ pipe <${name}> is undefined or not function!`\n    );\n    return this._pipes[name];\n  }\n\n  // add pipe\n  addPipe(name, converter) {\n    let converterFn = (payload) => {\n      let ob = converter(payload);\n      return Rx.Observable.from(ob);\n    }\n    \n    this._pipes[name] = (payload) => {\n      return Rx.Observable.of(payload)\n        .concatMap(this.combinedMiddleware('before', name))\n        .concatMap(converterFn)\n        .concatMap(this.combinedMiddleware('after', name));\n    }\n  }\n\n  // add pipes\n  addPipes(context, converters) {\n    Object.keys(converters).forEach(key => {\n      let converter = converters[key];\n      let pipeName = context + '.' + key;\n      this.addPipe(pipeName, converter);\n    });\n  }\n\n  // commine middlewares\n  combinedMiddleware(type, pipeName) {\n    return (payload) => {\n      let observable = Rx.Observable.of(payload);\n      this._middlewares[type].forEach(fn => {\n        observable = observable.map(payload => {\n          return {\n            payload,\n            pipeName,\n            type,\n          };\n        }).concatMap(fn);\n      });\n      return observable;\n    }\n  }\n\n  // add middleware\n  addMiddleware(type, middleware) {\n    let middlewareFn = (payload) => {\n      let ob = middleware(payload);\n      return Rx.Observable.from(ob);\n    }\n\n    this._middlewares[type].push(middlewareFn);\n  }\n}\n","import {Rx, checkRx} from '../rxjs';\nconst VuePlugin = {};\n\nVuePlugin.install = function(Vue, options={}) {\n  // check rx install\n  checkRx();\n\n  let storeOptionKey = options.storeOptionKey || 'store';\n  let storeKey = options.storeKey || '$store';\n  let hubOptionKey = options.hubOptionKey || 'hub';\n  let hubKey = options.hubKey || '$hub';\n  let stateKey = options.stateKey || '$state';\n  let subscriptionsKey = options.subscriptionsKey || '$subs';\n\n  Vue.prototype.$unsubscribe = function(ns) {\n    const vm = this;\n    const subs = vm[subscriptionsKey];\n\n    try {\n      // unsubscribe one\n      if (ns) {\n        let sub = subs[ns]; \n        if (sub && typeof sub.unsubscribe === 'function') {\n          sub.unsubscribe();\n        }\n        delete subs[ns];\n        return;\n      }\n\n      // unsubscribe all\n      Object.keys(subs).forEach(key => {\n        let sub = subs[key];\n        if (sub && typeof sub.unsubscribe === 'function') {\n          sub.unsubscribe();\n        }\n        delete subs[key];\n      });\n    } catch(e) {\n      console.log(e);\n    }\n  }\n\n  // mixin\n  Vue.mixin({\n\n    beforeCreate() {\n      const vm = this;\n      const options = vm.$options;\n      const store = options[storeOptionKey];\n      const hub = options[hubOptionKey];\n\n      // subscriptions\n      vm[subscriptionsKey] = {};\n\n      // store injection\n      if (store) {\n        vm[storeKey] = typeof store === 'function' ? store() : store;\n        vm[stateKey] = ( new Vue({ data: vm[storeKey].state }) ).$data;\n      } else if (options.parent && options.parent[storeKey]) {\n        vm[storeKey] = options.parent[storeKey];\n        vm[stateKey] = options.parent[stateKey];\n      }\n\n      // hub injection\n      if (hub) {\n        vm[hubKey] = typeof hub === 'function' ? hub() : hub;\n      } else if (options.parent && options.parent[hubKey]) {\n        vm[hubKey] = options.parent[hubKey];\n      }\n\n      // subjects\n      let subjects = options['subjects'] || [];\n      subjects.forEach(sName => {\n        vm[sName] = new Rx.Subject();\n      });\n    },\n\n    beforeDestroy() {\n      this.$unsubscribe();\n    }\n  });\n}\n\nexport default VuePlugin;\n","import {Rx} from '../rxjs';;\n\nexport default function logMiddleware({payload, pipeName, type}) {\n  let data = payload;\n  let typeMsg = {\n    before: 'in',\n    after: 'out'\n  }[type];\n\n  try {\n    let data = JSON.parse(JSON.stringify(payload));\n  } catch(e) {\n    //\n  }\n\n  console.log(`data-hub log ~ pipe ${typeMsg} <${pipeName}>:`, data);\n\n  return Rx.Observable.of(payload);\n}\n","import {Rx, checkRx} from '../rxjs';\n\nexport default function createRxHubComponent({\n  store,\n  hub,\n  storeKey = '$store',\n  hubKey = '$hub',\n  subscriptionsKey = '$subs'\n}, React) {\n\n  class RxHubComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      // check rx install\n      checkRx();\n\n      this[storeKey] = store;\n      this[hubKey] = hub;\n      this[subscriptionsKey] = {};      \n    }\n\n    $unsubscribe(ns) {\n      const vm = this;\n      const subs = vm[subscriptionsKey];\n  \n      try {\n        // unsubscribe one\n        if (ns) {\n          let sub = subs[ns]; \n          if (sub && typeof sub.unsubscribe === 'function') {\n            sub.unsubscribe();\n          }\n          delete subs[ns];\n          return;\n        }\n  \n        // unsubscribe all\n        Object.keys(subs).forEach(key => {\n          let sub = subs[key];\n          if (sub && typeof sub.unsubscribe === 'function') {\n            sub.unsubscribe();\n          }\n          delete subs[key];\n        });\n      } catch(e) {\n        console.log(e);\n      }\n    }\n\n    componentWillUnMount() {\n      this.$unsubscribe();\n    }\n  };\n\n  return RxHubComponent;\n}\n"],"names":["checkRx","Rx","_needInstall","Observable","Subject","from","of","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","Store","options","_check","debug","_isRxHubStore","_subject","_state","initialState","_mutations","mutations","_modules","modules","keys","forEach","module","key","subscribe","state","this","moduleName","_this","getState","path","arr","split","find","length","shift","JSON","parse","stringify","mutation","payload","parent","location","log","commit","next","bind","Hub","beforeMiddlewares","afterMiddlewares","_pipes","_middlewares","combinedMiddleware","converter","concatMap","ob","context","converters","pipeName","addPipe","type","observable","map","fn","middleware","push","VuePlugin","install","Vue","storeOptionKey","storeKey","hubOptionKey","hubKey","stateKey","subscriptionsKey","prototype","$unsubscribe","ns","subs","sub","unsubscribe","mixin","vm","$options","store","hub","data","$data","sName","typeMsg","React","props","Component","_Rx"],"mappings":"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"}